<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd ">
    <context:component-scan base-package="com.letv.whatslive" />
    <bean id="cofigBean"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:*.properties</value>
            </list>
        </property>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="false"/>
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="timeout" value="200" />
        <property name="password" value="${redis.passwd}" />
        <constructor-arg index="0" ref="jedisPoolConfig" />
    </bean>

    <!-- jedis客户端读写分离，分别对应2个不同的jedis对象 -->
    <bean id="jedisDAO" class="com.letv.whatslive.redis.JedisDAO">
        <constructor-arg index="0" ref="jedisWriteTemplate"/>
        <constructor-arg index="1" ref="jedisReadTemplate"/>
    </bean>

    <!-- redis单节点下的jedis写操作bean -->
    <bean id="jedisWriteTemplate" class="com.letv.whatslive.redis.template.JedisTemplate" lazy-init="true">
        <constructor-arg index="0" ref="jdeisWritePool"/>
    </bean>

    <!-- redis单节点下的jedis读操作bean -->
    <bean id="jedisReadTemplate" class="com.letv.whatslive.redis.template.JedisTemplate" lazy-init="true">
        <constructor-arg index="0" ref="jdeisReadPool"/>
    </bean>

    <!-- jedis写连接池bean -->
    <bean id="jdeisWritePool" class="com.letv.whatslive.redis.factory.JedisPoolFactory" factory-method="getJedisPool" lazy-init="true">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.write.host}" />
        <constructor-arg index="2" value="${redis.write.port}" />
        <constructor-arg index="3" value="${redis.timeout}" />
        <constructor-arg index="4" value="${redis.write.passwd}" />
    </bean>

    <!-- jedis读连接池bean -->
    <bean id="jdeisReadPool" class="com.letv.whatslive.redis.factory.JedisPoolFactory" factory-method="getJedisPool" lazy-init="true">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.read.host}" />
        <constructor-arg index="2" value="${redis.read.port}" />
        <constructor-arg index="3" value="${redis.timeout}" />
        <constructor-arg index="4" value="${redis.write.passwd}" />
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>

    <bean id="liveOperate" class="com.letv.whatslive.chat.server.LiveOperate"/>

    <!-- redis 订阅-->
    <bean id="chatMessageListener" class="com.letv.whatslive.chat.mq.ChatMessageListener"/>
    <bean id="roomMessageListener" class="com.letv.whatslive.chat.mq.ChatRoomMessageListener"/>


    <bean id="topicContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer" destroy-method="destroy">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>

        <property name="taskExecutor">
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
                <property name="poolSize" value="4"></property>
            </bean>
        </property>
        <property name="messageListeners">
            <map>
                <entry key-ref="chatMessageListener">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="chat"/>
                    </bean>
                </entry>
                <entry key-ref="roomMessageListener">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="chatroom"/>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

</beans>
