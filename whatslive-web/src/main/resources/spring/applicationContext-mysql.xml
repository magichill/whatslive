<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd

		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
       default-lazy-init="true">

    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${mysql.jdbc.driver}"/>
        <property name="jdbcUrl" value="${mysql.jdbc.url}"/>
        <property name="username" value="${mysql.jdbc.username}"/>
        <property name="password" value="${mysql.jdbc.password}"/>
        <property name="idleConnectionTestPeriodInMinutes" value="${idleConnectionTestPeriodInMinutes}"/>
        <property name="idleMaxAgeInMinutes" value="${idleMaxAgeInMinutes}"/>
        <property name="maxConnectionsPerPartition" value="${maxConnectionsPerPartition}"/>
        <property name="minConnectionsPerPartition" value="${minConnectionsPerPartition}"/>
        <property name="partitionCount" value="${partitionCount}"/>
        <property name="acquireIncrement" value="${acquireIncrement}"/>
        <property name="statementsCacheSize" value="${statementsCacheSize}"/>
        <property name="releaseHelperThreads" value="${releaseHelperThreads}"/>
        <property name="defaultAutoCommit" value="true"/>
    </bean>

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 指定mybatis配置文件位置 -->
        <property name="configLocation" value="classpath:com/letv/whatslive/mysql/mybatis/mybatis-config.xml"/>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="com.letv.whatslive.model.mysql"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath*:com/letv/whatslive/mysql/mybatis/**/*Mapper.xml"/>
    </bean>
    <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.letv.whatslive.mysql.mybatis"/>
        <property name="annotationClass" value="com.letv.whatslive.mysql.mybatis.MyBatisRepository"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>