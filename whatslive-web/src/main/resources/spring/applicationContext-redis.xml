<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- jedis客户端读写分离，分别对应2个不同的jedis对象 -->
    <bean id="jedisDAO" class="com.letv.whatslive.redis.JedisDAO">
        <constructor-arg index="0" ref="jedisWriteTemplate"/>
        <constructor-arg index="1" ref="jedisReadTemplate"/>
    </bean>

    <!-- redis集群模式下的jedis操作bean -->
    <bean id="jedisClusterTempate" class="com.letv.whatslive.redis.template.JedisClusterTemplate" lazy-init="true">
        <constructor-arg index="0" ref="jedisCluster"/>
    </bean>

    <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster" lazy-init="true">
        <constructor-arg index="0">
            <set>
                <ref bean="hostAndPort"/>
            </set>
        </constructor-arg>
        <constructor-arg index="1" value="1" />
        <constructor-arg index="2" value="5" />
        <constructor-arg index="3" ref="jedisPoolConfig" />
    </bean>

    <bean id="hostAndPort" class="redis.clients.jedis.HostAndPort" lazy-init="true">
        <constructor-arg index="0" value="${redis.cluster.ip}" />
        <constructor-arg index="1" value="${redis.cluster.port}" />
    </bean>

    <!-- redis单节点下的jedis写操作bean -->
    <bean id="jedisWriteTemplate" class="com.letv.whatslive.redis.template.JedisTemplate" lazy-init="true">
        <constructor-arg index="0" ref="jdeisWritePool"/>
    </bean>

    <!-- redis单节点下的jedis读操作bean -->
    <bean id="jedisReadTemplate" class="com.letv.whatslive.redis.template.JedisTemplate" lazy-init="true">
        <constructor-arg index="0" ref="jdeisReadPool"/>
    </bean>

    <!-- jedis写连接池bean -->
    <bean id="jdeisWritePool" class="com.letv.whatslive.redis.factory.JedisPoolFactory" factory-method="getJedisPool" lazy-init="true">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.write.host}" />
        <constructor-arg index="2" value="${redis.write.port}" />
        <constructor-arg index="3" value="${redis.timeout}" />
        <constructor-arg index="4" value="${redis.write.passwd}" />
    </bean>

    <!-- jedis读连接池bean -->
    <bean id="jdeisReadPool" class="com.letv.whatslive.redis.factory.JedisPoolFactory" factory-method="getJedisPool" lazy-init="true">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.read.host}" />
        <constructor-arg index="2" value="${redis.read.port}" />
        <constructor-arg index="3" value="${redis.timeout}" />
        <constructor-arg index="4" value="${redis.read.passwd}" />
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>


</beans>